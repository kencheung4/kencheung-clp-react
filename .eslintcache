[{"/Users/cheungchingai/kencheung-clp-frontend/src/reportWebVitals.ts":"1","/Users/cheungchingai/kencheung-clp-frontend/src/index.tsx":"2","/Users/cheungchingai/kencheung-clp-frontend/src/App.tsx":"3","/Users/cheungchingai/kencheung-clp-frontend/src/Client.tsx":"4","/Users/cheungchingai/kencheung-clp-frontend/src/aws-exports.js":"5","/Users/cheungchingai/kencheung-clp-frontend/src/graphql/mutation.js":"6","/Users/cheungchingai/kencheung-clp-frontend/src/graphql/query.js":"7","/Users/cheungchingai/kencheung-clp-frontend/src/Dashboard.tsx":"8","/Users/cheungchingai/kencheung-clp-frontend/src/graphql/subscription.js":"9"},{"size":425,"mtime":1606404727159,"results":"10","hashOfConfig":"11"},{"size":1279,"mtime":1606559291000,"results":"12","hashOfConfig":"13"},{"size":470,"mtime":1606571275110,"results":"14","hashOfConfig":"15"},{"size":1972,"mtime":1606573748685,"results":"16","hashOfConfig":"15"},{"size":409,"mtime":1606465046729,"results":"17","hashOfConfig":"15"},{"size":464,"mtime":1606564228781,"results":"18","hashOfConfig":"15"},{"size":215,"mtime":1606564241000,"results":"19","hashOfConfig":"15"},{"size":5327,"mtime":1606573937020,"results":"20","hashOfConfig":"15"},{"size":279,"mtime":1606571636000,"results":"21","hashOfConfig":"15"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2272qn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13gyrcj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fvl00e",{"filePath":"29","messages":"30","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/cheungchingai/kencheung-clp-frontend/src/reportWebVitals.ts",[],["44","45","46","47","48","49","50","51"],"/Users/cheungchingai/kencheung-clp-frontend/src/index.tsx",[],"/Users/cheungchingai/kencheung-clp-frontend/src/App.tsx",[],"/Users/cheungchingai/kencheung-clp-frontend/src/Client.tsx",["52","53","54","55","56","57","58","59","60"],"/Users/cheungchingai/kencheung-clp-frontend/src/aws-exports.js",[],"/Users/cheungchingai/kencheung-clp-frontend/src/graphql/mutation.js",["61"],"/Users/cheungchingai/kencheung-clp-frontend/src/graphql/query.js",["62"],"\nexport const GetGame = `\n  query getGame {\n    getGame {  \n      id\n      blue\n      red\n      black\n      clicks {\n        color\n        createdAt\n      }\n      createdAt\n    }\n  }\n`\n\nexport default {\n  GetGame,\n}","/Users/cheungchingai/kencheung-clp-frontend/src/Dashboard.tsx",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"import React from 'react';\nimport gql from 'graphql-tag';\nimport { graphql, compose } from 'react-apollo';\nimport { graphqlMutation } from 'aws-appsync-react';\nimport { Line } from 'react-chartjs-2';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport {\n  GetGame,\n} from './graphql/query';\n\nimport {\n  updatedGameSubscription,\n} from './graphql/subscription';\n\ninterface Click {\n  createdAt: string\n  color: string\n}\n\ninterface Game {\n  blue: number;\n  red: number;\n  black: number;\n  clicks: [Click];\n  id: string;\n  createdAt: string;\n  isSubscribed: boolean;\n}\n\ninterface ChartDataState {\n  hasInit: boolean,\n  labels: Array<number>,\n  redData: Array<number>,\n  blueData: Array<number>,\n  blackData: Array<number>,\n}\n\ntype DashboardProps = {\n  game: Game,\n  subscribeToMoreClicks: Function,\n}\n\nconst Loading = () => {\n  return <div>Loading...</div>\n}\n\nlet chartUpdateInterval: NodeJS.Timeout;\nconst showMaxRecentSeconds = 30;\n\nfunction Dashboard(props: DashboardProps) {\n\n  const [chartData, setChartData] = React.useState<ChartDataState>({\n    hasInit: false,\n    labels: [],\n    redData: [],\n    blueData: [],\n    blackData: []\n  });\n\n  const { red, blue, black, clicks, createdAt, id } = props.game;\n\n  React.useEffect(() => {\n    if (props.game.id) {\n      console.log(\"start subscribeToMoreClicks\", props.game.id);\n      props.subscribeToMoreClicks(props.game.id);\n    }\n  }, [props.game]);\n\n  React.useEffect(() => {\n    if (!props.game.id) return;\n\n    const updateChart = () => {\n      const minTime = moment(clicks[0]?.createdAt).unix();\n      const maxTime = moment(clicks[clicks.length - 1]?.createdAt).unix();\n\n      const intervals = maxTime - minTime + 1 > showMaxRecentSeconds ? showMaxRecentSeconds : maxTime - minTime + 1;\n\n      const labels = _.times(intervals, (n) => n + 1);\n      const initialData = _.times(intervals, () => 0);\n      const redData = [...initialData];\n      const blueData = [...initialData];\n      const blackData = [...initialData];\n\n      clicks.forEach(click => {\n        console.log(\"LOOPING each click\", click);\n        const currentTimeInterval = intervals - (maxTime - moment(click.createdAt).unix()) - 1;\n        if (currentTimeInterval < 0) {\n          // it's before showMaxRecentSeconds, skip show this click\n          return;\n        }\n        if (click.color === 'red') {\n          redData[currentTimeInterval] += 1;\n        } else if (click.color === 'blue') {\n          blueData[currentTimeInterval] += 1;\n        }\n        blackData[currentTimeInterval] = blueData[currentTimeInterval] - redData[currentTimeInterval];\n      })\n\n      setChartData({\n        hasInit: true,\n        labels,\n        redData,\n        blueData,\n        blackData\n      })\n    }\n\n    if (chartData.hasInit) {\n      clearInterval(chartUpdateInterval);\n      chartUpdateInterval = setInterval(updateChart, 5000);\n    } else {\n      updateChart();\n    }\n\n  }, [props.game]);\n\n  if (!id) {\n    return <Loading />\n  }\n\n  const data = {\n    labels: chartData.labels,\n    datasets: [\n      {\n        label: 'blue',\n        data: chartData.blueData,\n        fill: false,\n        backgroundColor: 'rgb(96, 165, 250)',\n        borderColor: 'rgba(96, 165, 250, 0.2)',\n      },\n      {\n        label: 'red',\n        data: chartData.redData,\n        fill: false,\n        backgroundColor: 'rgb(248, 113, 113)',\n        borderColor: 'rgba(248, 113, 113, 0.2)',\n      },\n      {\n        label: 'black',\n        data: chartData.blackData,\n        fill: false,\n        backgroundColor: 'rgb(0, 0, 0)',\n        borderColor: 'rgba(0, 0, 0, 0.2)',\n      },\n    ],\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: false,\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Click(s)'\n          }\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Seconds'\n          }\n        },\n      ],\n    },\n  }\n\n  return (\n    <div className=\"Dashboard p-8 flex justify-center\">\n      <div className='flex flex-col'>\n        <span>This chart show the recent {showMaxRecentSeconds} seconds clicks</span>\n        <Line data={data} options={options} width={480} height={240} />\n        <div className='flex flex-wrap justify-center p-8'>\n          <div className='flex items-center justify-center py-16 bg-blue-400 text-2xl text-white mx-8 w-60'>\n            {props.game.blue}\n          </div>\n          <div className='flex items-center justify-center py-16 bg-red-400 text-2xl text-white mx-8 w-60'>\n            {props.game.red}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default compose(\n  graphql(gql(GetGame), {\n    options: {\n      fetchPolicy: 'cache-and-network'\n    },\n    props: (props: any) => ({\n      game: props.data.getGame,\n      subscribeToMoreClicks: (id: string) => {\n        props.data.subscribeToMore({\n          document: gql(updatedGameSubscription),\n          variables: { id },\n          updateQuery: (prev: any, result: any) => {\n            console.log(\"subscribeToMoreClicks updateQuery\", result);\n            return {\n              getGame: {\n                ...result.subscriptionData.data.updatedGame,\n              },\n            }\n          }\n        })\n      },\n    })\n  }),\n)(Dashboard);\n","/Users/cheungchingai/kencheung-clp-frontend/src/graphql/subscription.js",["85"],"export const updatedGameSubscription = `\n  subscription updatedGame($id: ID!) {\n    updatedGame(id: $id) {\n      id\n      blue\n      red\n      black\n      clicks {\n        color\n        createdAt\n      }\n      createdAt\n    }\n  } \n`\n\nexport default {\n  updatedGameSubscription,\n}",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":25},{"ruleId":"106","severity":1,"message":"103","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":19,"column":11,"nodeType":"109","messageId":"110","endLine":19,"endColumn":14,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":32,"column":3,"nodeType":"114","messageId":"115","endLine":32,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":35,"column":16,"nodeType":"109","messageId":"110","endLine":35,"endColumn":19,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":37,"column":9,"nodeType":"114","messageId":"115","endLine":37,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":63,"column":20,"nodeType":"109","messageId":"110","endLine":63,"endColumn":23,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"108","line":70,"column":20,"nodeType":"109","messageId":"110","endLine":70,"endColumn":23,"suggestions":"118"},{"ruleId":"107","severity":1,"message":"108","line":81,"column":20,"nodeType":"109","messageId":"110","endLine":81,"endColumn":23,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":33,"column":1,"nodeType":"122","endLine":36,"endColumn":2},{"ruleId":"120","severity":1,"message":"121","line":18,"column":1,"nodeType":"122","endLine":20,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":25},{"ruleId":"106","severity":1,"message":"103","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":25},{"ruleId":"102","severity":1,"message":"123","line":62,"column":11,"nodeType":"104","messageId":"105","endLine":62,"endColumn":14},{"ruleId":"106","severity":1,"message":"123","line":62,"column":11,"nodeType":"104","messageId":"105","endLine":62,"endColumn":14},{"ruleId":"102","severity":1,"message":"124","line":62,"column":16,"nodeType":"104","messageId":"105","endLine":62,"endColumn":20},{"ruleId":"106","severity":1,"message":"124","line":62,"column":16,"nodeType":"104","messageId":"105","endLine":62,"endColumn":20},{"ruleId":"102","severity":1,"message":"125","line":62,"column":22,"nodeType":"104","messageId":"105","endLine":62,"endColumn":27},{"ruleId":"106","severity":1,"message":"125","line":62,"column":22,"nodeType":"104","messageId":"105","endLine":62,"endColumn":27},{"ruleId":"102","severity":1,"message":"126","line":62,"column":37,"nodeType":"104","messageId":"105","endLine":62,"endColumn":46},{"ruleId":"106","severity":1,"message":"126","line":62,"column":37,"nodeType":"104","messageId":"105","endLine":62,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":66,"column":7,"nodeType":"114","messageId":"115","endLine":66,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":69,"column":6,"nodeType":"129","endLine":69,"endColumn":18,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":78,"column":1,"nodeType":"133","messageId":"134","endLine":78,"endColumn":117},{"ruleId":"112","severity":1,"message":"113","line":87,"column":9,"nodeType":"114","messageId":"115","endLine":87,"endColumn":20},{"ruleId":"131","severity":1,"message":"135","line":88,"column":1,"nodeType":"133","messageId":"134","endLine":88,"endColumn":96},{"ruleId":"131","severity":1,"message":"136","line":98,"column":1,"nodeType":"133","messageId":"134","endLine":98,"endColumn":103},{"ruleId":"127","severity":1,"message":"137","line":117,"column":6,"nodeType":"129","endLine":117,"endColumn":18,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":169,"column":1,"nodeType":"133","messageId":"134","endLine":169,"endColumn":86},{"ruleId":"107","severity":1,"message":"108","line":189,"column":20,"nodeType":"109","messageId":"110","endLine":189,"endColumn":23,"suggestions":"140"},{"ruleId":"107","severity":1,"message":"108","line":195,"column":31,"nodeType":"109","messageId":"110","endLine":195,"endColumn":34,"suggestions":"141"},{"ruleId":"107","severity":1,"message":"108","line":195,"column":44,"nodeType":"109","messageId":"110","endLine":195,"endColumn":47,"suggestions":"142"},{"ruleId":"112","severity":1,"message":"113","line":196,"column":13,"nodeType":"114","messageId":"115","endLine":196,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":17,"column":1,"nodeType":"122","endLine":19,"endColumn":2},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["145"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'graphqlMutation' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["146","147"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["148","149"],["150","151"],["152","153"],["154","155"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'red' is assigned a value but never used.","'blue' is assigned a value but never used.","'black' is assigned a value but never used.","'createdAt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["156"],"max-len","This line has a length of 116. Maximum allowed is 80.","Program","max","This line has a length of 95. Maximum allowed is 80.","This line has a length of 102. Maximum allowed is 80.","React Hook React.useEffect has missing dependencies: 'chartData.hasInit' and 'clicks'. Either include them or remove the dependency array.",["157"],"This line has a length of 85. Maximum allowed is 80.",["158","159"],["160","161"],["162","163"],"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"messageId":"164","fix":"165","desc":"166"},{"messageId":"167","fix":"168","desc":"169"},{"messageId":"164","fix":"170","desc":"166"},{"messageId":"167","fix":"171","desc":"169"},{"messageId":"164","fix":"172","desc":"166"},{"messageId":"167","fix":"173","desc":"169"},{"messageId":"164","fix":"174","desc":"166"},{"messageId":"167","fix":"175","desc":"169"},{"messageId":"164","fix":"176","desc":"166"},{"messageId":"167","fix":"177","desc":"169"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"messageId":"164","fix":"182","desc":"166"},{"messageId":"167","fix":"183","desc":"169"},{"messageId":"164","fix":"184","desc":"166"},{"messageId":"167","fix":"185","desc":"169"},{"messageId":"164","fix":"186","desc":"166"},{"messageId":"167","fix":"187","desc":"169"},"suggestUnknown",{"range":"188","text":"189"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"188","text":"190"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"191","text":"189"},{"range":"191","text":"190"},{"range":"192","text":"189"},{"range":"192","text":"190"},{"range":"193","text":"189"},{"range":"193","text":"190"},{"range":"194","text":"189"},{"range":"194","text":"190"},"Update the dependencies array to be: [props, props.game]",{"range":"195","text":"196"},"Update the dependencies array to be: [chartData.hasInit, clicks, props.game]",{"range":"197","text":"198"},{"range":"199","text":"189"},{"range":"199","text":"190"},{"range":"200","text":"189"},{"range":"200","text":"190"},{"range":"201","text":"189"},{"range":"201","text":"190"},[347,350],"unknown","never",[611,614],[1507,1510],[1631,1634],[1831,1834],[1394,1406],"[props, props.game]",[2903,2915],"[chartData.hasInit, clicks, props.game]",[4658,4661],[4894,4897],[4907,4910]]